name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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

          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/ruvadel.ipa"
          APPLE_ID: "ryusukeyamano59@hotmail.com"
          APP_SPECIFIC_PASSWORD: "drac-nkly-bimd-davf"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
